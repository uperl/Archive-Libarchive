package Archive::Libarchive::API;

use strict;
use warnings;

# ABSTRACT: Comprehensive API documentation for Archive::Libarchive
# VERSION

# NOTE: This document is autogenerated from the template
# maint/tt/Doc.pm.tt
# Please see maint/README.md for details on updating.

1;

__END__

=head1 SYNOPSIS

# EXAMPLE: examples/synopsis/synopsis.pl

=head1 DESCRIPTION

[% FOREACH class IN classes -%]
=head1 Archive::Libarchive::[% class.name %]

=over 4

=item Main documentation and examples: L<Archive::Libarchive::[% class.name %]>

[% IF class.parent -%]
=item Parent class: L<[% class.parent %]>

[% END -%]
=back

[% FOREACH method IN class.methods -%]
[% IF method.pod -%]
[% method.pod -%]
[% ELSE -%]
=head2 [% method.name %]

 # [% method.symbol_name %][% IF method.optional %] (optional)[% END %]
 [% IF method.ret_type != '$void' %]my [% method.ret_type %] = [% END %]$[% class.var %]->[% method.name -%]
   [%- IF method.arg_types.size > 0 %]([% FOREACH type IN method.arg_types %][% type %][% UNLESS loop.last %], [% END %][% END %])[% END %];

[% END -%]
[% END -%]
[% END -%]
[% IF constants.size > 0 -%]
=head1 CONSTANTS

The status code constants are documented in the main documentation page
L<Archive::Libarchive>.

These constants can be imported individually from L<Archive::Libarchive> using
the normal L<Exporter> interface, or all of them can be imported with the C<:const>
export tag or along with functions with the C<:all> tag.

For the rest please consult the C<libarchive>
documentation.

=over 4

[% FOREACH constant IN constants -%]
=item [% constant.name %]

[% END -%]
=back

[% END -%]
[% IF removed.size > 0 -%]
=head1 NOT IMPLEMENTED

The following methods are not currently implemented.  The reason for this
is usually for one of 1) the method doesn't make sense in the context of
Perl 2) the methods have been renamed, and this is the old name kept for
compatibility in C<libarchive> 3) the methods have deprecated and will
be removed in a future version of C<libarchive> 4) we haven't gotten around
to writing bindings for them.

=over 4

[% FOREACH method IN removed -%]
=item [% method %]

[% END -%]
=back

[% END -%]
[% INCLUDE seealso.tt -%]
